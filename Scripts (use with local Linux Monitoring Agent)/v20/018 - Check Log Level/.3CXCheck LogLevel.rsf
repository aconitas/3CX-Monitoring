{"Script":{"MonScriptCategoryI3D":27,"Name":".3CXCheck LogLevel","ScriptKind":0,"ScriptType":3,"Script":"##########################################################################\r\n#\r\n#   aconitas® GmbH · Bäumenheimer Str. 5 · 86690 Mertingen · Germany\r\n#   https://www.aconitas.com · info@aconitas.com · +49 (906) 126725-0\r\n#\r\n#   Version 3CX V20 1.0 · 2024-03-01\r\n#\r\n##########################################################################\r\n\r\n#!/bin/bash\r\n\r\n########################################################\r\n#### Import WebServerPort in Variable\r\nHTTP_PORT=$(cat /tmp/3cx.port)\r\n\r\n########################################################\r\n#### Token-Extraktion und Header-Vorbereitung\r\nTOKEN=$(cat /tmp/3cx.token)\r\nHEADER=\"Authorization: Bearer ${TOKEN}\"\r\n\r\n########################################################\r\n#### Curl-Anfrage zum Abrufen der Logging-Einstellungen\r\nLoggingSettingsResponse=$(curl --request GET --cookie /tmp/3cxcookie --cookie-jar /tmp/3cxcookie -s \"localhost:${HTTP_PORT}/xapi/v1/LoggingSettings\" -H \"${HEADER}\")\r\n\r\n# Überprüfen, ob die Antwort leer ist oder das erwartete \"odata.context\"-Feld fehlt\r\nif [ -z \"$LoggingSettingsResponse\" ] || ! echo \"$LoggingSettingsResponse\" | grep -q \"odata\\.context\"; then\r\n  echo \"Fehler beim Abrufen der Logging-Einstellungen. Die Antwort war leer oder es fehlt das erwartete odata.context Feld. Überprüfen Sie die Konfiguration oder die Erreichbarkeit des Servers.\"\r\n  exit 1\r\nfi\r\n\r\n# Funktion zum Extrahieren des Werts aus dem JSON-String mit grep\r\nextract_value() {\r\n  local key=\"$1\"\r\n  echo \"$LoggingSettingsResponse\" | grep -o \"\\\"$key\\\":[^,}]*\" | cut -d \":\" -f 2- | tr -d '\" ,'\r\n}\r\n\r\n# Versuchen Sie, die Werte abzurufen\r\nLogLevel=$(extract_value \"LoggingLevel\")\r\nKeepDay=$(extract_value \"KeepLogsDays\")\r\nKeepStatus=$(extract_value \"KeepLogs\")\r\n\r\n# Überprüfen, ob die abgerufenen Werte leer oder null sind\r\nif [[ -z $LogLevel ]] || [[ -z $KeepDay ]] || [[ -z $KeepStatus ]]; then\r\n  echo \"Fehler beim Parsen der Logging-Einstellungen. Überprüfen Sie die Konfiguration oder die Erreichbarkeit des Servers.\"\r\n  exit 1\r\nfi\r\n\r\n# Hier können Sie weitere Verarbeitungsschritte hinzufügen, je nach Ihren Anforderungen.\r\n\r\n# Beispiel: Log-Meldung basierend auf LogLevel\r\nif [[ \"$LogLevel\" == \"0\" ]]; then\r\n  echo \"Das Logging der 3CX ist nicht aktiv\"\r\n  exit 1\r\nelif [[ \"$LogLevel\" == \"1\" ]]; then\r\n  echo \"Loglevel ist auf Gering eingestellt\"\r\n  exit 2\r\nelif [[ \"$LogLevel\" == \"2\" ]]; then\r\n  echo \"Loglevel ist auf Mittel eingestellt\"\r\nelif [[ \"$LogLevel\" == \"3\" ]]; then\r\n  echo \"ACHTUNG: Loglevel ist auf Verbose Mode eingestellt\"\r\n  exit 1\r\nfi\r\n\r\n# Beispiel: Weitere Verarbeitungsschritte basierend auf KeepStatus und KeepDay\r\nif [[ \"$KeepStatus\" == \"true\" ]]; then\r\n  echo \"Die Aufbewahrungspolitik ist aktiv mit $KeepDay Tagen\"\r\nelse\r\n  echo \"Die Aufbewahrungspolitik ist INAKTIV\"\r\n  exit 2\r\nfi\r\n","ExitCodeSuccess":0,"ExitCodeWarning":2,"ExitCodeError":1,"IsSelfHeal":false,"SelfHealingScript":null,"SelfHealingExitCodeSuccess":0,"SelfHealingExitCodeError":0,"ThirdPartyIdentifier":null,"ArticleCode":null,"UniqueId":null},"Parameters":[]}